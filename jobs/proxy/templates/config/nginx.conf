user vcap;

pid /var/vcap/sys/run/proxy/nginx.pid;
error_log /var/vcap/sys/log/proxy/error.log <%= p('docker.proxy.loglevel', 'error') %>;
working_directory /var/vcap/data/tmp;
worker_processes <%= p('docker.proxy.worker_processes') %>;
worker_priority <%= p('docker.proxy.worker_priority') %>;

events {
    worker_connections 8192;
    use epoll;
}

http {
    # Basic settings
    server_tokens off;
    sendfile off;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout <%= p('docker.proxy.keepalive_timeout', '75s') %> <%= p('docker.proxy.keepalive_timeout_header', '20s') %>;
    keepalive_requests 512;
    connection_pool_size 256;
    client_max_body_size 0;
    chunked_transfer_encoding on;
    default_type application/octet-stream;
    include mime.types;
    # Log format
    log_format timed_combined '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_time $upstream_response_time $pipe';

    access_log /var/vcap/sys/log/proxy/proxy-access.log timed_combined;
    error_log  /var/vcap/sys/log/proxy/proxy-error.log <%= p('docker.proxy.loglevel', 'error') %>;

    <% if_p('docker.proxy.ssl.cert') do %>
        # Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
        ssl_protocols <%= p('docker.proxy.ssl.protocols') %>;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        <% if_p('docker.proxy.ssl.dhparam') do |dhparam| %>
            ssl_dhparam /var/vcap/jobs/proxy/tls/dhparam.pem;
        <% end %>
        ssl_certificate     /var/vcap/jobs/proxy/tls/cert.pem;
        ssl_certificate_key /var/vcap/jobs/proxy/tls/key.pem;
    <% end %>

    ## Set a variable to help us decide if we need to add the
    ## 'Docker-Distribution-Api-Version' header.
    ## The registry always sets this header.
    ## In the case of nginx performing auth, the header will be unset
    ## since nginx is auth-ing before proxying.
    map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
        'registry/2.0' '';
        default registry/2.0;
    }

    upstream docker {
    <% p('docker.proxy.backend.hosts').each do |ip| %>
        server <%= ip %>:<%= p('docker.proxy.backend.port') %>;
    <% end %>
    }

    ## If $docker_distribution_api_version is empty, the header will not be added.
    ## See the map directive above where this variable is defined.
    add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;
    proxy_set_header Host              $host;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Original-URI    $request_uri;
    proxy_pass_header Server;
    proxy_read_timeout 3600;
    root /var/vcap/jobs/proxy/packages/docker-registry-ui;

    <% if_p('docker.proxy.ssl.cert') do %>
    server {
        server_name proxy_admin;
        <% if_p('docker.proxy.ssl.cert') do %>
            listen <%= p('docker.proxy.address','*') %>:<%= p('docker.proxy.port', '443') %> default_server;
            ssl on;
        <% end.else do %>
            listen <%= p('docker.proxy.address','*') %>:<%= p('docker.proxy.port', '80') %> default_server;
            ssl off;
        <% end %>
	location / {
		add_header Cache-Control no-cache;
		expires 0;
		try_files $uri /index.html =404;
	}
	
        location /v2/ {
            # Do not allow connections from docker 1.5 and earlier
            # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
            if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*\$" ) {
                return 404;
            }
            <% if_p("docker.proxy.auth_basic") do %>
                # To add basic authentication to v2 use auth_basic setting.
                auth_basic "Registry Realm";
                auth_basic_user_file auth/registry;
            <% end %>
            proxy_pass http://docker;
        }
    }
    <% end %>

    <% if p("docker.proxy.only_auth_for_admin", false) %>
    server {
        server_name proxy_readonly;
        <% if_p('docker.proxy.ssl.cert') do %>
            listen <%= p('docker.proxy.address','*') %>:<%= p('docker.proxy.readonly_port', '444') %> default_server;
            ssl on;
        <% end.else do %>
            listen <%= p('docker.proxy.address','*') %>:<%= p('docker.proxy.readonly_port', '81') %> default_server;
            ssl off;
        <% end %>

	location / {
	    add_header Cache-Control no-cache;
	    expires 0;
	    try_files $uri /index.html =404;
	}

        location /v2/ {
            # Do not allow connections from docker 1.5 and earlier
            # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
            if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*\$" ) {
              return 404;
            }
            limit_except GET {
              deny  all;
            }
            proxy_pass http://docker;
        }
    }
    <% end %>
}
